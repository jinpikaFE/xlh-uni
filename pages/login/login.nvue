<template>
	<view>
		<view class="header" />
		<view class="login-wrap">
			<view class="login-card">
				<view class="">
					<uni-forms ref="form" :modelValue="model" :rules="rules">
						<uni-forms-item label="手机号" name="mobile">
							<uni-easyinput :inputBorder="false" max-length="11" type="text" v-model="model.mobile" placeholder="请输入手机号" />
						</uni-forms-item>
						<uni-forms-item label="验证码" name="captcha"><uni-easyinput :inputBorder="false" type="text" v-model="model.captcha" placeholder="请输入验证码" /></uni-forms-item>
					</uni-forms>
				</view>
				<u-button @click="submit" :ripple="true" class="loginBtn" hover-class="loginBtnHover">登录</u-button>
				<view class="loginExtra">
					<text class="right">注册账号</text>
					<text>忘记密码？</text>
				</view>
			</view>
			<view class="otherMethodText">其他登陆方式</view>
			<view class="otherLoginMethod">
				<u-icon size="60" class="right" name="weixin-circle-fill" />
				<u-icon size="60" name="email" />
			</view>
		</view>
	</view>
</template>

<script>
export default {
	data() {
		return {
			model: {
				mobile: '',
				captcha: ''
			},
			rules: {
				mobile: {
					rules: [
						{
							required: true,
							errorMessage: '请输入手机号'
						},
						{
							validateFunction: (rule, value, data, callback) => {
								// 异步需要返回 Promise 对象
								return new Promise((resolve, reject) => {
									if (uni.$u.test.mobile(value)) {
										// 通过返回 resolve
										resolve();
									} else {
										// 不通过返回 reject(new Error('错误信息'))
										reject(new Error('请输入正确的手机号'));
									}
								});
							}
						}
					]
				},
				captcha: {
					rules: [
						{
							required: true,
							errorMessage: '请输入验证码'
						}
					]
				}
			}
		};
	},
	onReady() {
		// 需要在onReady中设置规则
		this.$refs.form.setRules(this.rules);
	},
	methods: {
		/**
		 * 表单提交
		 * @param {Object} event
		 */
		submit() {
			uni.showLoading();
			this.$refs.form
				.validate()
				.then(res => {
					uni.hideLoading();
					console.log('表单数据信息：', res);
				})
				.catch(err => {
					uni.hideLoading();
					console.log('表单错误信息：', err);
				});
		}
	}
};
</script>

<style lang="scss">
.header {
	display: flex;
	height: 248px;
	background: url(@/static/headergb.png) center no-repeat;
	background-size: cover;
}

.login-wrap {
	// padding: 10px;
	position: relative;
	.login-card {
		position: absolute;
		margin: 0 auto;
		width: 95%;
		background-color: #fff;
		top: -54px;
		left: 0;
		right: 0;
		padding: 23px 37px;
		border-radius: 8px;
		font-size: 14px;
		line-height: 150%;
		box-shadow: 0px 2px 2px 0px rgba(0, 0, 0, 0.1428571428571429);
		text-align: center;
	}
}

.loginBtn {
	background-color: $xlh-color-primary;
	color: #fff;
}
.loginBtnHover {
	background-color: rgba(255, 105, 6, 0.4);
}

.loginExtra {
	display: flex;
	justify-content: space-between;
	flex-direction: row;
	margin-top: 23px;
	color: rgba(166, 166, 166, 1);
	font-size: 16px;
	font-weight: bolder;

	.right {
		color: $xlh-color-primary;
	}
}

.otherMethodText {
	margin-top: 226px;
	text-align: center;
	font-size: 12px;
	color: $xlh-color-primary;
}

.otherLoginMethod {
	display: flex;
	justify-content: center;
	flex-direction: row;
	margin-top: 20px;
	
	.right {
		margin-right: 76px;
	}
}
</style>
